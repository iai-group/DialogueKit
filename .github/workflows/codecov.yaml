# This workflow will install dependencies, create coverage tests and run Pytest Coverage Comment
# For more information see: https://github.com/MishaKav/pytest-coverage-comment/
name: pytest-coverage-comment
on:
  pull_request:
    branches:
      - '*'
jobs:
  pytest_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7.12

      - name: Installing requirements
        run: |
          pip3 install -r requirements/requirements.txt

      - name: Run pytest and coverage
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=dialoguekit tests/ | tee pytest-coverage.txt


      - name: Upload Coverage Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: coverage-results
          path: ./pytest-coverage.txt

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: pytest-xml
          path: ./pytest.xml

  pytest_coverage_comment:
    runs-on: ubuntu-latest
    needs: pytest_coverage
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: artifacts/coverage-results/pytest-coverage.txt
          title: Coverage Report
          badge-title: Coverage
          hide-badge: false
          hide-report: false
          create-new-comment: false
          hide-comment: false
          report-only-changed-files: false
          remove-link-from-badge: false
          junitxml-path: artifacts/pytest-xml/pytest.xml
          junitxml-title: Pytest summary

  update-coverage-on-readme:
    runs-on: ubuntu-latest
    needs: pytest_coverage
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Pytest coverage comment
        if: ${{ github.ref == 'refs/heads/feature/#123_Look-into-ways-to-shorten-the-import-paths' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./data/pytest-coverage_4.txt
          junitxml-path: ./data/pytest_1.xml

      - name: Create Variable of Summary Report
        id: summary_report
        run: |
          SUMMARY_REPORT=${{ steps.coverageComment.outputs.summaryReport }}
          echo "::set-output name=content::$SUMMARY_REPORT"

      - name: Update Readme with Coverage Html
        if: ${{ github.ref == 'refs/heads/feature/#123_Look-into-ways-to-shorten-the-import-paths' }}
        run: |
          sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n\${{ steps.summary_report.outputs.content }}\n<!-- Pytest Coverage Comment:End -->' ./README.md

      - name: Commit & Push changes to Readme
        if: ${{ github.ref == 'refs/heads/feature/#123_Look-into-ways-to-shorten-the-import-paths' }}
        uses: actions-js/push@master
        with:
          message: Update coverage on Readme
          github_token: ${{ secrets.GITHUB_TOKEN }}
