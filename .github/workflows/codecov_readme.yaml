name: Update Coverage on Readme
on:
  push:
    branches:
      - feature/#123_Look-into-ways-to-shorten-the-import-paths
jobs:
  pytest_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7.12

      - name: Installing requirements
        run: |
          pip3 install -r requirements/requirements.txt

      - name: Run pytest and coverage
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov-report=xml  --cov=dialoguekit tests/ | tee pytest-coverage.txt


      - name: Upload Coverage Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: coverage-results
          path: ./pytest-coverage.txt

      - name: Upload Coverage Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: coverage-results
          path: coverage.xml

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: pytest-xml
          path: ./pytest.xml

  update-coverage-on-readme:
    runs-on: ubuntu-latest
    needs: pytest_coverage
    steps:
      - uses: actions/checkout@v3
        with:
          ref: feature/#123_Look-into-ways-to-shorten-the-import-paths
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
        
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Extract branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Pytest coverage comment
        #if: ${{ github.ref == 'refs/heads/feature/#123_Look-into-ways-to-shorten-the-import-paths' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: artifacts/coverage-results/pytest-coverage.txt
          junitxml-path: artifacts/pytest-xml/pytest.xml

      - name: Get the Coverage
        shell: bash
        run: |
          regex='<coverage.+line-rate="([0-9).[0-9]+)".+>'
          line=$(grep -oP $regex artifacts/coverage.xml)
          [[ $line =~ $regex ]]
          coverage=$( bc <<< ${BASH_REMATCH[1]}*100 )
          if (( $(echo "$coverage > 90" |bc -l) )); then
            COLOR=green
          else
            COLOR=red
          fi
          echo "COVERAGE=${coverage%.*}%" >> $GITHUB_ENV
          echo "COLOR=$COLOR" >> $GITHUB_ENV

      - name: Create Variable of Summary Report
        id: summary_report
        run: |
          SUMMARY_REPORT=${{ steps.coverageComment.outputs.summaryReport }}
          echo "::set-output name=content::$SUMMARY_REPORT"
